// <auto-generated />
using System;
using HipHopPizzaWings;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HipHopPizzaWings.Migrations
{
    [DbContext(typeof(HipHopPizzaWingsDbContext))]
    [Migration("20240416002145_ThirdCreate")]
    partial class ThirdCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HipHopPizzaWings.Models.Cashier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("uid")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Cashiers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Alice Hyatt",
                            email = "aliceHyatt@google.com",
                            uid = "AH12345MD"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Florence Jean Casteberry",
                            email = "flo@google.com",
                            uid = "FJC12345MD"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Mel Sharples",
                            email = "mel@google.com",
                            uid = "MD12345MD"
                        });
                });

            modelBuilder.Entity("HipHopPizzaWings.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ItemName")
                        .HasColumnType("text");

                    b.Property<decimal>("ItemPrice")
                        .HasColumnType("numeric");

                    b.Property<int?>("OrderId")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ItemName = "Cheese Pizza",
                            ItemPrice = 10.00m,
                            OrderId = 1
                        },
                        new
                        {
                            Id = 2,
                            ItemName = "Plain Wings",
                            ItemPrice = 6.00m,
                            OrderId = 2
                        },
                        new
                        {
                            Id = 3,
                            ItemName = "Pepperoni Pizza",
                            ItemPrice = 12.00m,
                            OrderId = 3
                        },
                        new
                        {
                            Id = 4,
                            ItemName = "BBQ Wings",
                            ItemPrice = 8.50m,
                            OrderId = 4
                        },
                        new
                        {
                            Id = 5,
                            ItemName = "Garlic Knots",
                            ItemPrice = 5.25m,
                            OrderId = 5
                        },
                        new
                        {
                            Id = 6,
                            ItemName = "Hawaiian Pizza",
                            ItemPrice = 14.50m,
                            OrderId = 6
                        },
                        new
                        {
                            Id = 7,
                            ItemName = "Buffalo Wings",
                            ItemPrice = 7.00m,
                            OrderId = 7
                        },
                        new
                        {
                            Id = 8,
                            ItemName = "Caesar Salad",
                            ItemPrice = 9.75m,
                            OrderId = 8
                        });
                });

            modelBuilder.Entity("HipHopPizzaWings.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CashierId")
                        .HasColumnType("integer");

                    b.Property<string>("CustomerName")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("IsPhone")
                        .HasColumnType("boolean");

                    b.Property<int?>("OrderId")
                        .HasColumnType("integer");

                    b.Property<string>("OrderStatus")
                        .HasColumnType("text");

                    b.Property<string>("OrderType")
                        .HasColumnType("text");

                    b.Property<string>("PaymentType")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<decimal>("TipAmount")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CashierId = 1,
                            CustomerName = "John Doe",
                            DateCreated = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "johnDoe@google.com",
                            IsPhone = true,
                            OrderId = 1,
                            OrderStatus = "closed",
                            OrderType = "",
                            PaymentType = "Visa",
                            PhoneNumber = "615-555-1212",
                            TipAmount = 4.97m
                        },
                        new
                        {
                            Id = 2,
                            CashierId = 2,
                            CustomerName = "Alice Smith",
                            DateCreated = new DateTime(2024, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "alice.smith@example.com",
                            IsPhone = false,
                            OrderId = 2,
                            OrderStatus = "delivered",
                            OrderType = "Delivery",
                            PaymentType = "MasterCard",
                            PhoneNumber = "615-555-1234",
                            TipAmount = 5.00m
                        },
                        new
                        {
                            Id = 3,
                            CashierId = 3,
                            CustomerName = "Bob Johnson",
                            DateCreated = new DateTime(2024, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "bob.johnson@example.com",
                            IsPhone = true,
                            OrderId = 3,
                            OrderStatus = "completed",
                            OrderType = "Pickup",
                            PaymentType = "Cash",
                            PhoneNumber = "615-555-5678",
                            TipAmount = 2.00m
                        },
                        new
                        {
                            Id = 4,
                            CashierId = 1,
                            CustomerName = "Emily Davis",
                            DateCreated = new DateTime(2024, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "emily.davis@example.com",
                            IsPhone = true,
                            OrderId = 4,
                            OrderStatus = "pending",
                            OrderType = "Dine-in",
                            PaymentType = "Amex",
                            PhoneNumber = "615-555-9876",
                            TipAmount = 7.25m
                        },
                        new
                        {
                            Id = 5,
                            CashierId = 2,
                            CustomerName = "Michael Wilson",
                            DateCreated = new DateTime(2024, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "michael.wilson@example.com",
                            IsPhone = false,
                            OrderId = 5,
                            OrderStatus = "processing",
                            OrderType = "Delivery",
                            PaymentType = "Discover",
                            PhoneNumber = "615-555-4321",
                            TipAmount = 0m
                        },
                        new
                        {
                            Id = 6,
                            CashierId = 3,
                            CustomerName = "Sarah Brown",
                            DateCreated = new DateTime(2024, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sarah.brown@example.com",
                            IsPhone = true,
                            OrderId = 6,
                            OrderStatus = "cancelled",
                            OrderType = "Pickup",
                            PaymentType = "Cash",
                            PhoneNumber = "615-555-8765",
                            TipAmount = 0.00m
                        });
                });

            modelBuilder.Entity("HipHopPizzaWings.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ItemId = 1,
                            OrderId = 1
                        },
                        new
                        {
                            Id = 2,
                            ItemId = 2,
                            OrderId = 2
                        },
                        new
                        {
                            Id = 3,
                            ItemId = 3,
                            OrderId = 3
                        });
                });

            modelBuilder.Entity("HipHopPizzaWings.Models.OrderType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("OrderTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "In Person"
                        },
                        new
                        {
                            Id = 2,
                            Type = "Phone"
                        },
                        new
                        {
                            Id = 3,
                            Type = "Web"
                        });
                });

            modelBuilder.Entity("HipHopPizzaWings.Models.PaymentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PaymentTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Cash"
                        },
                        new
                        {
                            Id = 2,
                            Type = "Card"
                        },
                        new
                        {
                            Id = 3,
                            Type = "Check"
                        },
                        new
                        {
                            Id = 4,
                            Type = "Cash App"
                        });
                });

            modelBuilder.Entity("HipHopPizzaWings.Models.OrderItem", b =>
                {
                    b.HasOne("HipHopPizzaWings.Models.Item", "Item")
                        .WithMany("Order")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HipHopPizzaWings.Models.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("HipHopPizzaWings.Models.Item", b =>
                {
                    b.Navigation("Order");
                });

            modelBuilder.Entity("HipHopPizzaWings.Models.Order", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
